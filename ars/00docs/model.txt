Airline Reservation System
    Admin Application
        - flight management(code)
            - create flight  (flight_create.html)
            - change ticket price (flight_edit.html)
            - delete flight
            - display all flights (flight_list.html)

            flights -- collection
                id -- fields
                flight_number -- fields 
                airway_name -- fields
                source -- fields
                destination -- fields
                capacity -- fields
                price -- fields
    Customer Application
        - Ticket Booking(Travel Plan)

what is Bootstrap?
    UI framework
        - readymade styles
    Build fast, responsive sites with Bootstrap

what is HTML5?
    markup language  to mark the content of tech site pages

what is css?
    style language to make webpage look and feel

where react app is developed ?
    -server side js --node.js

where react app used ?
    -client side (broswer)
    -after translation of server side js code base into client side code base

what is react ?
    -frontend app development framework library
        -package of node.js + UI(presentation)

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

FULL STACK
            - [client ] [appplication/business] [data]
                        ------------------------------
                            [server]

[client]                   - react / angular / vue
[Application/business]     - go lang / express /  django / flask / web api / c# / java spring
[data]                     -mongo / oracle / mysqul / sqlite

to create react Application named "client"
    -$npx create-react-app client
    or 
    -$npm create vite@latest client -- --template react

to create react Application under current folder named "client"
    -$npm create vite@latest . -- --template react

in src main.jsx is a first file which get access like main function in program
    -.jsx  - java script xml

index.html
    -Bootstrap css + js

main.jsx
    in this commment // index.html

App.jsx 
    route(navigation) bt    PageList ,     PageCreate ,    PageEdit
                            /flight/list   /flight/create  /flight/edit 

src/header/
    PageHeader.jsx
    include return statement  i.e. {export default PageHeader} -- to make the function as a component (to use it later using import from)
            - is parsed into javascript (put inside the empty elemment {<></>} )

src/flights/
    FlightCreate.jsx
    FlightEdit.jsx
    FlightList.jsx

        in this xml we need to change class -> className
                                      for   -> htmlFor
        
        in this xml <input> is not closed so we need to close maually by adding "/" { <input    />   }


For further navigation we need the router so using  code in  command prompt we can get it 

    -to install react-router-dom for navigation between page components
        $npm install react-router-dom

    -to verify - open package.json here dependencies code is present
        
        then define browserroutes ->  routes  -> route in app.jsx
            *** if it is not imported then use ctrl+space on the that particular word which you need to import
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

03app_mongoless
        client
        server          go lang | backend | RESTful API : http based web service
                        gin framework is used (gin : library)
        
        defaut web server number is 80

 flights : id , flight_number , airway_name , source , destination , capacity , price 

base server url : http://localhost:8080

 - flight management :
    crud operation                      method            url                           content(form of .json)
                                        verb               noun
            - Add flight                POST               /flights                     {"flight_number":"AU123","airway_name":"AIRINDIA","source":"Bengluru","destination":"Delhi","capacity":"250","price":"12000"}
            - Edit Flight               PUT/PATCH          /flights/:id                 {"flight_number":"AU123","airway_name":"AIRINDIA","source":"Bengluru","destination":"Delhi","capacity":"250","price":"12000"}
            - delete flight             DELETE             /flights/:id 
            - display by id             GET                /flights/:id     
            - display all flights       GET                /flights

api endpoint = method + url
endpoint  = http protocal + url

request handler contain all this crud operation
for testing :- Thunder Client is used as request handler which avilable as extention

200  OK -- read status using get
201  CREATE -- add status using POST  (use double coated text data ("number") and use Pascel case)


go programrun in intrgrated terminal
commend to create go.mod -- go mod init purushotham.com/main
to download gin- gonic module - go get github.com/gin-gonic/gin
Run command ->   go run main.go


fmt - core module -format module used to print /scan
deducing - declare the data without datatype ex :- third := 50


----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
to write the client appplication server appplication should be running
server appplication layer - ui logic 
client appplication - ux logic
all ui elements sit in the root elements (main.jsx)
dom - (document object model) ui's are written in virtual dom (render function)

start to write the fullstack app
    copy the the client folder from 02client_design to 03app_mongoless

server need to be running in server folder
now we have in client folder
    $npm install
    $npm install axios
        note axios is the client library
    $npm run  dev

function we cant maintain state -- so frame work does (we connect {hook})
    $npm install axios

usestate return2 array (state(flights),function(setFlights))

 map function (highter order method)
    which takes another method and make changes to the array (arr_name.map((arg)=>{return logic for array;})) 
    does in one single function
    example of incrementing salaries
    > const salaries = [1000,25000,35000,28000]
undefined
    > salaries
    [ 1000, 25000, 35000, 28000 ]
    > const increment = salaries.map((sal) => {return sal+5})
    undefined
    > increment
    [ 1005, 25005, 35005, 28005 ]
-----------------------
change the fields in th to flight.number and change everywhere 
in href edit button change double quotes to  backtick and then id number to ${flight.id}
this is called row bindingÂ 

const [flights, setFlights] = useState([/*state ref element and state function element(used to set the state*/]);

useEffect hook to call the readAllFlights function

